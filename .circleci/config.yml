version: 2.1

orbs:
  pack: buildpacks/pack@0.2.4
  heroku-buildpacks:
    commands:
      install-build-dependencies:
        steps:
          - run:
              name: "Install rsync, jq, libssl-dev, musl-tools, pkg-config via apt"
              command: sudo apt-get update && sudo apt-get install -y rsync jq libssl-dev musl-tools pkg-config
          - run:
              name: "Install yj 5.0.0"
              command: |
                bin_dir="$(mktemp -d)"
                curl --retry 3 --fail --max-time 10 --location "https://github.com/sclevine/yj/releases/download/v5.0.0/yj-linux" --output "${bin_dir}/yj"
                chmod +x "${bin_dir}/yj"

                echo "export PATH=\"${bin_dir}:\${PATH}\"" >> $BASH_ENV
          - run:
              name: "Install Rust Stable"
              command: |
                curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y -t x86_64-unknown-linux-musl
                echo "export PATH=\"$HOME/.cargo/bin:$PATH\"" >> $BASH_ENV
          - run:
              name: "Install libcnb-cargo"
              command: cargo install libcnb-cargo

jobs:
  package-buildpack:
    parameters:
      buildpack-dir:
        type: string
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - pack/install-pack:
          version: 0.27.0
      - heroku-buildpacks/install-build-dependencies
      - run:
          name: "Build and package buildpack"
          command: |
            package_toml="<< parameters.buildpack-dir >>/package.toml"
            if [[ -f "<< parameters.buildpack-dir >>/build.sh" ]]; then
              "./<< parameters.buildpack-dir >>/build.sh"
              package_toml="<< parameters.buildpack-dir >>/target/package.toml"
            fi

            pack buildpack package test --config "${package_toml}"

  shell-linting:
    docker:
      - image: koalaman/shellcheck-alpine:stable
    steps:
      - run: "apk add git"
      - run: "apk add shfmt"
      - checkout
      - run:
          name: "shellcheck"
          command: "shfmt -f . | grep -v ^test-fixtures/ | xargs shellcheck"
      - run:
          name: "shfmt"
          command: "shfmt -f . | grep -v ^test-fixtures/ | xargs shfmt -d"

  cutlass:
    parameters:
      spec_dir:
        type: string
    machine:
      image: ubuntu-2004:current
    resource_class: xlarge
    environment:
      PARALLEL_SPLIT_TEST_PROCESSES: 8
    steps:
      - checkout
      - pack/install-pack:
          version: 0.27.0
      - heroku-buildpacks/install-build-dependencies
      - run:
          name: Install Ruby dependencies
          command: |
            gem install bundler
            bundle install
      - run:
          name: Execute rspec << parameters.spec_dir >>
          command: bundle exec rspec << parameters.spec_dir >>

  cargo-test:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - heroku-buildpacks/install-build-dependencies
      - pack/install-pack:
          version: 0.27.0
      - run:
          command: cargo test

  rustfmt:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - heroku-buildpacks/install-build-dependencies
      - run:
          command: cargo fmt --all -- --check

workflows:
  version: 2
  ci:
    jobs:
      - shell-linting
      - cargo-test
      - rustfmt
      - package-buildpack:
          matrix:
            parameters:
              buildpack-dir:
                - "buildpacks/jvm"
                - "buildpacks/maven"
                - "buildpacks/jvm-function-invoker"
                - "meta-buildpacks/java"
                - "meta-buildpacks/java-function"
                - "test/meta-buildpacks/java"
                - "test/meta-buildpacks/java-function"
      - cutlass:
          matrix:
            parameters:
              spec_dir:
                - "test/specs/java"
                - "test/specs/java-function"
